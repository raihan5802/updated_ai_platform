{"ast":null,"code":"var _jsxFileName = \"/Users/raihanchowdhury/Desktop/ai_platform/P2/frontend/src/pages/AnnotatorDashboardPage.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/AnnotatorDashboard.js\nimport React, { useState, useEffect } from 'react';\nimport API from '../services/api';\nimport { removeToken } from '../utils/auth';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/AnnotatorDashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AnnotatorDashboard() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [user, setUser] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetchUser();\n    fetchTasks();\n  }, []);\n  async function fetchUser() {\n    try {\n      const res = await API.get('/auth/dashboard');\n      setUser(res.data.user);\n    } catch (err) {\n      console.error('[AnnotatorDashboard] fetchUser error:', err);\n      navigate('/signin');\n    }\n  }\n  async function fetchTasks() {\n    try {\n      // GET /auth/annotator/tasks\n      const res = await API.get('/auth/annotator/tasks');\n      setTasks(res.data.tasks || []);\n    } catch (error) {\n      console.error('[AnnotatorDashboard] fetchTasks error:', error);\n    }\n  }\n  function handleLogout() {\n    removeToken();\n    navigate('/signin');\n  }\n\n  // If you want a \"View Task\" button, you can define handleView(taskId)\n  function handleView(taskId, projectId) {\n    // navigate to a new page: /annotator/projects/:projectId/tasks/:taskId\n    // or something similar\n    navigate(`/annotator/projects/${projectId}/tasks/${taskId}`);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"annotator-dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"annotator-navbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Annotator Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-right\",\n        children: [user && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Welcome, \", user.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 30\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"annotator-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"My Assigned Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), tasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No tasks assigned yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"annotator-tasks-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Task ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Project ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Deadline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: task.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: task.project_id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: task.deadline || 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: task.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleView(task.id, task.project_id),\n                children: \"View\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 37\n            }, this)]\n          }, task.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_s(AnnotatorDashboard, \"Kpkgq2A+vwLneL9iFsrle9Zh3Ns=\", false, function () {\n  return [useNavigate];\n});\n_c = AnnotatorDashboard;\nexport default AnnotatorDashboard;\nvar _c;\n$RefreshReg$(_c, \"AnnotatorDashboard\");","map":{"version":3,"names":["React","useState","useEffect","API","removeToken","useNavigate","jsxDEV","_jsxDEV","AnnotatorDashboard","_s","tasks","setTasks","user","setUser","navigate","fetchUser","fetchTasks","res","get","data","err","console","error","handleLogout","handleView","taskId","projectId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","onClick","length","map","task","id","project_id","deadline","status","_c","$RefreshReg$"],"sources":["/Users/raihanchowdhury/Desktop/ai_platform/P2/frontend/src/pages/AnnotatorDashboardPage.js"],"sourcesContent":["// frontend/src/components/AnnotatorDashboard.js\nimport React, { useState, useEffect } from 'react';\nimport API from '../services/api';\nimport { removeToken } from '../utils/auth';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/AnnotatorDashboard.css';\n\nfunction AnnotatorDashboard() {\n    const [tasks, setTasks] = useState([]);\n    const [user, setUser] = useState(null);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        fetchUser();\n        fetchTasks();\n    }, []);\n\n    async function fetchUser() {\n        try {\n            const res = await API.get('/auth/dashboard');\n            setUser(res.data.user);\n        } catch (err) {\n            console.error('[AnnotatorDashboard] fetchUser error:', err);\n            navigate('/signin');\n        }\n    }\n\n    async function fetchTasks() {\n        try {\n            // GET /auth/annotator/tasks\n            const res = await API.get('/auth/annotator/tasks');\n            setTasks(res.data.tasks || []);\n        } catch (error) {\n            console.error('[AnnotatorDashboard] fetchTasks error:', error);\n        }\n    }\n\n    function handleLogout() {\n        removeToken();\n        navigate('/signin');\n    }\n\n    // If you want a \"View Task\" button, you can define handleView(taskId)\n    function handleView(taskId, projectId) {\n        // navigate to a new page: /annotator/projects/:projectId/tasks/:taskId\n        // or something similar\n        navigate(`/annotator/projects/${projectId}/tasks/${taskId}`);\n    }\n\n    return (\n        <div className=\"annotator-dashboard-container\">\n            {/* Navbar */}\n            <div className=\"annotator-navbar\">\n                <h2>Annotator Dashboard</h2>\n                <div className=\"navbar-right\">\n                    {user && <span>Welcome, {user.name}</span>}\n                    <button onClick={handleLogout}>Logout</button>\n                </div>\n            </div>\n\n            {/* Tasks Table */}\n            <div className=\"annotator-content\">\n                <h3>My Assigned Tasks</h3>\n                {tasks.length === 0 ? (\n                    <p>No tasks assigned yet.</p>\n                ) : (\n                    <table className=\"annotator-tasks-table\">\n                        <thead>\n                            <tr>\n                                <th>Task ID</th>\n                                <th>Project ID</th>\n                                <th>Deadline</th>\n                                <th>Status</th>\n                                <th>Actions</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {tasks.map((task) => (\n                                <tr key={task.id}>\n                                    <td>{task.id}</td>\n                                    <td>{task.project_id}</td>\n                                    <td>{task.deadline || 'N/A'}</td>\n                                    <td>{task.status}</td>\n                                    <td>\n                                        <button onClick={() => handleView(task.id, task.project_id)}>\n                                            View\n                                        </button>\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default AnnotatorDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}