{"ast":null,"code":"var _jsxFileName = \"/Users/raihanchowdhury/Desktop/ai_platform/P2/frontend/src/components/FileTree.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/FileTree.js\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FileTree({\n  treeData,\n  highlightPaths\n}) {\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"file-tree\",\n    children: treeData.map((node, idx) => /*#__PURE__*/_jsxDEV(TreeNode, {\n      node: node,\n      highlightPaths: highlightPaths\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n}\n_c = FileTree;\nfunction TreeNode({\n  node,\n  highlightPaths\n}) {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const isHighlighted = highlightPaths === null || highlightPaths === void 0 ? void 0 : highlightPaths.has(node.path);\n  const highlightStyle = {\n    color: 'red',\n    fontWeight: 'bold'\n  };\n  if (node.type === 'directory') {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setIsOpen(!isOpen),\n        style: isHighlighted ? highlightStyle : {},\n        children: [isOpen ? '‚åÑ' : '>', \" \\uD83D\\uDCC1 \", node.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), isOpen && node.children && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: node.children.map((child, i) => /*#__PURE__*/_jsxDEV(TreeNode, {\n          node: child,\n          highlightPaths: highlightPaths\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this);\n  }\n\n  // file\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    style: isHighlighted ? highlightStyle : {},\n    children: [\"\\uD83D\\uDCC4 \", node.name]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_s(TreeNode, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c2 = TreeNode;\nexport default FileTree;\nvar _c, _c2;\n$RefreshReg$(_c, \"FileTree\");\n$RefreshReg$(_c2, \"TreeNode\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FileTree","treeData","highlightPaths","className","children","map","node","idx","TreeNode","fileName","_jsxFileName","lineNumber","columnNumber","_c","_s","isOpen","setIsOpen","isHighlighted","has","path","highlightStyle","color","fontWeight","type","onClick","style","name","child","i","_c2","$RefreshReg$"],"sources":["/Users/raihanchowdhury/Desktop/ai_platform/P2/frontend/src/components/FileTree.js"],"sourcesContent":["// frontend/src/components/FileTree.js\nimport React, { useState } from 'react';\n\nfunction FileTree({ treeData, highlightPaths }) {\n    return (\n        <ul className=\"file-tree\">\n            {treeData.map((node, idx) => (\n                <TreeNode key={idx} node={node} highlightPaths={highlightPaths} />\n            ))}\n        </ul>\n    );\n}\n\nfunction TreeNode({ node, highlightPaths }) {\n    const [isOpen, setIsOpen] = useState(false);\n    const isHighlighted = highlightPaths?.has(node.path);\n    const highlightStyle = { color: 'red', fontWeight: 'bold' };\n\n    if (node.type === 'directory') {\n        return (\n            <li>\n                <div onClick={() => setIsOpen(!isOpen)} style={isHighlighted ? highlightStyle : {}}>\n                    {isOpen ? '‚åÑ' : '>'} üìÅ {node.name}\n                </div>\n                {isOpen && node.children && (\n                    <ul>\n                        {node.children.map((child, i) => (\n                            <TreeNode key={i} node={child} highlightPaths={highlightPaths} />\n                        ))}\n                    </ul>\n                )}\n            </li>\n        );\n    }\n\n    // file\n    return (\n        <li style={isHighlighted ? highlightStyle : {}}>\n            üìÑ {node.name}\n        </li>\n    );\n}\n\nexport default FileTree;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,QAAQA,CAAC;EAAEC,QAAQ;EAAEC;AAAe,CAAC,EAAE;EAC5C,oBACIH,OAAA;IAAII,SAAS,EAAC,WAAW;IAAAC,QAAA,EACpBH,QAAQ,CAACI,GAAG,CAAC,CAACC,IAAI,EAAEC,GAAG,kBACpBR,OAAA,CAACS,QAAQ;MAAWF,IAAI,EAAEA,IAAK;MAACJ,cAAc,EAAEA;IAAe,GAAhDK,GAAG;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA+C,CACpE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEb;AAACC,EAAA,GARQb,QAAQ;AAUjB,SAASQ,QAAQA,CAAC;EAAEF,IAAI;EAAEJ;AAAe,CAAC,EAAE;EAAAY,EAAA;EACxC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAMoB,aAAa,GAAGf,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAEgB,GAAG,CAACZ,IAAI,CAACa,IAAI,CAAC;EACpD,MAAMC,cAAc,GAAG;IAAEC,KAAK,EAAE,KAAK;IAAEC,UAAU,EAAE;EAAO,CAAC;EAE3D,IAAIhB,IAAI,CAACiB,IAAI,KAAK,WAAW,EAAE;IAC3B,oBACIxB,OAAA;MAAAK,QAAA,gBACIL,OAAA;QAAKyB,OAAO,EAAEA,CAAA,KAAMR,SAAS,CAAC,CAACD,MAAM,CAAE;QAACU,KAAK,EAAER,aAAa,GAAGG,cAAc,GAAG,CAAC,CAAE;QAAAhB,QAAA,GAC9EW,MAAM,GAAG,GAAG,GAAG,GAAG,EAAC,gBAAI,EAACT,IAAI,CAACoB,IAAI;MAAA;QAAAjB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC,EACLG,MAAM,IAAIT,IAAI,CAACF,QAAQ,iBACpBL,OAAA;QAAAK,QAAA,EACKE,IAAI,CAACF,QAAQ,CAACC,GAAG,CAAC,CAACsB,KAAK,EAAEC,CAAC,kBACxB7B,OAAA,CAACS,QAAQ;UAASF,IAAI,EAAEqB,KAAM;UAACzB,cAAc,EAAEA;QAAe,GAA/C0B,CAAC;UAAAnB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAgD,CACnE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CACP;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAEb;;EAEA;EACA,oBACIb,OAAA;IAAI0B,KAAK,EAAER,aAAa,GAAGG,cAAc,GAAG,CAAC,CAAE;IAAAhB,QAAA,GAAC,eACzC,EAACE,IAAI,CAACoB,IAAI;EAAA;IAAAjB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAEb;AAACE,EAAA,CA5BQN,QAAQ;AAAAqB,GAAA,GAARrB,QAAQ;AA8BjB,eAAeR,QAAQ;AAAC,IAAAa,EAAA,EAAAgB,GAAA;AAAAC,YAAA,CAAAjB,EAAA;AAAAiB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}