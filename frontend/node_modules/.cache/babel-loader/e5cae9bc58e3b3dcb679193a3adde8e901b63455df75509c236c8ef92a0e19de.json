{"ast":null,"code":"var _jsxFileName = \"/Users/raihanchowdhury/Desktop/ai_platform/P2/frontend/src/components/TreeNode.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/TreeNode.js\nimport React, { useState } from 'react';\n\n// node = { name: string, type: 'file'|'directory', children?: [] }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TreeNode({\n  node\n}) {\n  _s();\n  // Track whether this folder (if directory) is open or closed\n  const [isOpen, setIsOpen] = useState(false);\n\n  // If it's just a file, render a single <li>\n  if (node.type === 'file') {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"tree-item file-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"file-icon\",\n        children: \"\\uD83D\\uDCC4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), \" \", node.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this);\n  }\n\n  // Otherwise, node.type === 'directory'\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"tree-item directory-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"folder-toggle\",\n      onClick: () => setIsOpen(!isOpen),\n      role: \"button\",\n      tabIndex: 0,\n      onKeyDown: e => e.key === 'Enter' && setIsOpen(!isOpen),\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"folder-arrow\",\n        children: isOpen ? '‚ñº' : '‚ñ∫'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"folder-icon\",\n        children: \"\\uD83D\\uDCC1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), node.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), isOpen && node.children && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"folder-children\",\n      children: node.children.map((child, idx) => /*#__PURE__*/_jsxDEV(TreeNode, {\n        node: child\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n_s(TreeNode, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c = TreeNode;\nexport default TreeNode;\nvar _c;\n$RefreshReg$(_c, \"TreeNode\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TreeNode","node","_s","isOpen","setIsOpen","type","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","onClick","role","tabIndex","onKeyDown","e","key","map","child","idx","_c","$RefreshReg$"],"sources":["/Users/raihanchowdhury/Desktop/ai_platform/P2/frontend/src/components/TreeNode.js"],"sourcesContent":["// frontend/src/components/TreeNode.js\nimport React, { useState } from 'react';\n\n// node = { name: string, type: 'file'|'directory', children?: [] }\n\nfunction TreeNode({ node }) {\n    // Track whether this folder (if directory) is open or closed\n    const [isOpen, setIsOpen] = useState(false);\n\n    // If it's just a file, render a single <li>\n    if (node.type === 'file') {\n        return (\n            <li className=\"tree-item file-item\">\n                <span className=\"file-icon\">üìÑ</span> {node.name}\n            </li>\n        );\n    }\n\n    // Otherwise, node.type === 'directory'\n    return (\n        <li className=\"tree-item directory-item\">\n            {/* Folder toggle */}\n            <div\n                className=\"folder-toggle\"\n                onClick={() => setIsOpen(!isOpen)}\n                role=\"button\"\n                tabIndex={0}\n                onKeyDown={(e) => e.key === 'Enter' && setIsOpen(!isOpen)}\n            >\n                <span className=\"folder-arrow\">\n                    {isOpen ? '‚ñº' : '‚ñ∫'}\n                </span>\n                <span className=\"folder-icon\">üìÅ</span>\n                {node.name}\n            </div>\n            {/* If open, render children */}\n            {isOpen && node.children && (\n                <ul className=\"folder-children\">\n                    {node.children.map((child, idx) => (\n                        <TreeNode key={idx} node={child} />\n                    ))}\n                </ul>\n            )}\n        </li>\n    );\n}\n\nexport default TreeNode;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAEvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,QAAQA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAAAC,EAAA;EACxB;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;;EAE3C;EACA,IAAII,IAAI,CAACI,IAAI,KAAK,MAAM,EAAE;IACtB,oBACIN,OAAA;MAAIO,SAAS,EAAC,qBAAqB;MAAAC,QAAA,gBAC/BR,OAAA;QAAMO,SAAS,EAAC,WAAW;QAAAC,QAAA,EAAC;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,KAAC,EAACV,IAAI,CAACW,IAAI;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC;EAEb;;EAEA;EACA,oBACIZ,OAAA;IAAIO,SAAS,EAAC,0BAA0B;IAAAC,QAAA,gBAEpCR,OAAA;MACIO,SAAS,EAAC,eAAe;MACzBO,OAAO,EAAEA,CAAA,KAAMT,SAAS,CAAC,CAACD,MAAM,CAAE;MAClCW,IAAI,EAAC,QAAQ;MACbC,QAAQ,EAAE,CAAE;MACZC,SAAS,EAAGC,CAAC,IAAKA,CAAC,CAACC,GAAG,KAAK,OAAO,IAAId,SAAS,CAAC,CAACD,MAAM,CAAE;MAAAI,QAAA,gBAE1DR,OAAA;QAAMO,SAAS,EAAC,cAAc;QAAAC,QAAA,EACzBJ,MAAM,GAAG,GAAG,GAAG;MAAG;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB,CAAC,eACPZ,OAAA;QAAMO,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,EACtCV,IAAI,CAACW,IAAI;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,EAELR,MAAM,IAAIF,IAAI,CAACM,QAAQ,iBACpBR,OAAA;MAAIO,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAC1BN,IAAI,CAACM,QAAQ,CAACY,GAAG,CAAC,CAACC,KAAK,EAAEC,GAAG,kBAC1BtB,OAAA,CAACC,QAAQ;QAAWC,IAAI,EAAEmB;MAAM,GAAjBC,GAAG;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAgB,CACrC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACP;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEb;AAACT,EAAA,CAxCQF,QAAQ;AAAAsB,EAAA,GAARtB,QAAQ;AA0CjB,eAAeA,QAAQ;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}